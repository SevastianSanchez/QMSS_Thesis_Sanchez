#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Chunk 2
# baseline model
FE_all <- plm(formula = sdg_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
subset = stable == 1,
data = panel_data,
effect = "twoways")
summary(FE_all)
summary(FE_all, vcov = vcovHC(FE_all, cluster = "group", type = "HC1"))
# Chunk 3
# autocratized variable
FE_aut <- plm(formula = sdg_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = autocratized == 1, # modifying based regime stability
effect = "twoways")
summary(FE_aut)
summary(FE_aut, vcov = vcovHC(FE_aut, cluster = "group", type = "HC1"))
# Chunk 4
# autocratized variable
FE_dem <- plm(formula = sdg_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = democratized == 1, # modifying based on regime stability
effect = "twoways")
summary(FE_dem)
summary(FE_dem, vcov = vcovHC(FE_dem, cluster = "group", type = "HC1"))
# Extracting robust standard errors for the three FE models
rob_se_fe <- list(
coeftest(FE_all, vcov = vcovHC(FE_all, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_aut, vcov = vcovHC(FE_aut, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_dem, vcov = vcovHC(FE_dem, cluster = "group", type = "HC1"))[, 2]
)
# stargazer table for FE models
stargazer(
FE_all, FE_aut, FE_dem,
se = rob_se_fe,
type = "html",
title = "H4: SDG and DI Fixed Effects Models (Regime Change)",
align = TRUE,
dep.var.labels = "SDG Overall Score",
column.labels = c("All", "Autocratized", "Democratized"),
#covariate.labels = c("DI Composite", "Lagged DI (t-1)", "Lagged DI (t-2)",  "Log(GDPper-capita)", "Lower-Middle Income (LMIC)", "Upper-Middle Income (UMIC)", "High Income (HIC)", "Intercept"),
report = "vcs*",
notes = "Robust standard errors clustered by country in parentheses",
omit = "factor\\(year\\)",
model.names = FALSE,
out = "compiled_materials/results/h4_sdg_di_FE_models.html"
)
# Extracting robust standard errors for the three FE models
rob_se_fe <- list(
coeftest(FE_all, vcov = vcovHC(FE_all, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_aut, vcov = vcovHC(FE_aut, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_dem, vcov = vcovHC(FE_dem, cluster = "group", type = "HC1"))[, 2]
)
# stargazer table for FE models
stargazer(
FE_all, FE_aut, FE_dem,
se = rob_se_fe,
type = "html",
title = "H4: SDG and DI Fixed Effects Models (Regime Change)",
align = TRUE,
dep.var.labels = "SDG Overall Score",
column.labels = c("All", "Autocratized", "Democratized"),
covariate.labels = c("DI Composite", "Lagged DI (t-1)", "Lagged DI (t-2)",  "Log(GDPper-capita)", "Lower-Middle Income (LMIC)", "Upper-Middle Income (UMIC)", "High Income (HIC)", "Intercept"),
report = "vcs*",
notes = "Robust standard errors clustered by country in parentheses",
omit = "factor\\(year\\)",
model.names = FALSE,
out = "compiled_materials/results/h4_sdg_di_FE_models.html"
)
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Chunk 2
# baseline model
FE_all <- plm(formula = sci_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
subset = stable == 1,
data = panel_data,
effect = "twoways")
summary(FE_all)
summary(FE_all, vcov = vcovHC(FE_all, cluster = "group", type = "HC1"))
# Chunk 3
# autocratized variable
FE_aut <- plm(formula = sci_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = autocratized == 1, # modifying based regime stability
effect = "twoways")
summary(FE_aut)
summary(FE_aut, vcov = vcovHC(FE_aut, cluster = "group", type = "HC1"))
# Chunk 4
# autocratized variable
FE_dem <- plm(formula = sci_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = democratized == 1, # modifying based on regime stability
effect = "twoways")
summary(FE_dem)
summary(FE_dem, vcov = vcovHC(FE_dem, cluster = "group", type = "HC1"))
# Extracting robust standard errors for the three FE models
rob_se_fe <- list(
coeftest(FE_all, vcov = vcovHC(FE_all, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_aut, vcov = vcovHC(FE_aut, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_dem, vcov = vcovHC(FE_dem, cluster = "group", type = "HC1"))[, 2]
)
# stargazer table for FE models
stargazer(
FE_all, FE_aut, FE_dem,
se = rob_se_fe,
type = "html",
title = "H4: SCI and DI Fixed Effects Models (Regime Change)",
align = TRUE,
dep.var.labels = "SCI Overall Score",
column.labels = c("All", "Autocratized", "Democratized"),
covariate.labels = c("DI Composite", "Lagged DI (t-1)", "Lagged DI (t-2)",  "Log(GDPper-capita)", "Lower-Middle Income (LMIC)", "Upper-Middle Income (UMIC)", "High Income (HIC)", "Intercept"),
report = "vcs*",
notes = "Robust standard errors clustered by country in parentheses",
omit = "factor\\(year\\)",
model.names = FALSE,
out = "compiled_materials/results/h4_sci_di_FE_models.html"
)
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Chunk 2
# baseline model
FE_all <- plm(formula = spi_comp ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
subset = stable == 1,
data = panel_data,
effect = "twoways")
summary(FE_all)
summary(FE_all, vcov = vcovHC(FE_all, cluster = "group", type = "HC1"))
# Chunk 3
# autocratized variable
FE_aut <- plm(formula = spi_comp ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = autocratized == 1, # modifying based regime stability
effect = "twoways")
summary(FE_aut)
summary(FE_aut, vcov = vcovHC(FE_aut, cluster = "group", type = "HC1"))
# Chunk 4
# autocratized variable
FE_dem <- plm(formula = spi_comp ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = democratized == 1, # modifying based on regime stability
effect = "twoways")
summary(FE_dem)
summary(FE_dem, vcov = vcovHC(FE_dem, cluster = "group", type = "HC1"))
# Extracting robust standard errors for the three FE models
rob_se_fe <- list(
coeftest(FE_all, vcov = vcovHC(FE_all, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_aut, vcov = vcovHC(FE_aut, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_dem, vcov = vcovHC(FE_dem, cluster = "group", type = "HC1"))[, 2]
)
# stargazer table for FE models
stargazer(
FE_all, FE_aut, FE_dem,
se = rob_se_fe,
type = "html",
title = "H4: SPI and DI Fixed Effects Models (Regime Change)",
align = TRUE,
dep.var.labels = "SPI Overall Score",
column.labels = c("All", "Autocratized", "Democratized"),
covariate.labels = c("DI Composite", "Lagged DI (t-1)", "Lagged DI (t-2)",  "Log(GDPper-capita)", "Lower-Middle Income (LMIC)", "Upper-Middle Income (UMIC)", "High Income (HIC)", "Intercept"),
report = "vcs*",
notes = "Robust standard errors clustered by country in parentheses",
omit = "factor\\(year\\)",
model.names = FALSE,
out = "compiled_materials/results/h4_spi_di_FE_models.html"
)
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Chunk 2
# Define the group variable based on regime stability
group <-
# panel_data$has_aut_ep == 1
# panel_data$has_dem_ep == 1
# panel_data$has_neither == 1
panel_data$autocratized == 1
# panel_data$democratized == 1
# panel_data$stable == 1
# Chunk 3
# baseline model
FE_no_spi <- plm(formula = sdg_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = group, # modifying based on regime stability
effect = "twoways")
summary(FE_no_spi)
summary(FE_no_spi, vcov = vcovHC(FE_no_spi, cluster = "group", type = "HC1"))
# Chunk 4
# baseline model
FE_with_SPI <- plm(formula = sdg_overall ~ spi_comp + dplyr::lag(spi_comp, 1) + dplyr::lag(spi_comp, 2) + di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = group, # modifying based on regime stability
effect = "twoways")
summary(FE_with_SPI)
summary(FE_with_SPI, vcov = vcovHC(FE_with_SPI, cluster = "group", type = "HC1"))
stargazer(FE_no_spi, FE_with_SPI,
type = "html",
title = "H4: SDG and DI Fixed Effects Models (regime change: autocracized) (with and without SPI)",
dep.var.labels = c("SDG Overall"),
column.labels = c("Without SPI", "With SPI"),
model.numbers = FALSE,
no.space = TRUE,
align = TRUE,
digits = 3,
out = "compiled_materials/results/H4_sdg~di+spi_FE_models.html")
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Chunk 2
# baseline model
FE_all <- plm(formula = sdg_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
subset = stable == 1,
data = panel_data,
effect = "twoways")
summary(FE_all)
summary(FE_all, vcov = vcovHC(FE_all, cluster = "group", type = "HC1"))
# Chunk 3
# autocratized variable
FE_aut <- plm(formula = sdg_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = autocratized == 1, # modifying based regime stability
effect = "twoways")
summary(FE_aut)
summary(FE_aut, vcov = vcovHC(FE_aut, cluster = "group", type = "HC1"))
# Chunk 4
# autocratized variable
FE_dem <- plm(formula = sdg_overall ~ di_score + dplyr::lag(di_score, 1) + dplyr::lag(di_score, 2) + log_gdppc + income_level_recoded,
model = "within",
index = c("country_code", "year"),
data = panel_data,
subset = democratized == 1, # modifying based on regime stability
effect = "twoways")
summary(FE_dem)
summary(FE_dem, vcov = vcovHC(FE_dem, cluster = "group", type = "HC1"))
# Extracting robust standard errors for the three FE models
rob_se_fe <- list(
coeftest(FE_all, vcov = vcovHC(FE_all, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_aut, vcov = vcovHC(FE_aut, cluster = "group", type = "HC1"))[, 2],
coeftest(FE_dem, vcov = vcovHC(FE_dem, cluster = "group", type = "HC1"))[, 2]
)
# stargazer table for FE models
stargazer(
FE_all, FE_aut, FE_dem,
se = rob_se_fe,
type = "html",
title = "H4: SDG and DI Fixed Effects Models (Regime Change)",
align = TRUE,
dep.var.labels = "SDG Overall Score",
column.labels = c("All", "Autocratized", "Democratized"),
covariate.labels = c("DI Composite", "Lagged DI (t-1)", "Lagged DI (t-2)",  "Log(GDPper-capita)", "Lower-Middle Income (LMIC)", "Upper-Middle Income (UMIC)", "High Income (HIC)", "Intercept"),
report = "vcs*",
notes = "Robust standard errors clustered by country in parentheses",
omit = "factor\\(year\\)",
model.names = FALSE,
out = "compiled_materials/results/h4_sdg_di_FE_models.html"
)
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
# Load all packages from the packages.R file
source("packages.R")
# Load the panel data script
source("Comp2_panel_wrangling.R")
# Table of all countries and select regime change variables: has_aut_ep, has_dem_ep, has_neither, autocratized, democratized, and stable, and total counts of autocratization and democratization episodes [DONE!!]
regime_change_status <- panel_data %>%
select(country_name, country_code, has_aut_ep, total_aut_ep, has_dem_ep, total_dem_ep, has_neither, autocratized, democratized, stable) %>%
distinct() %>% # Ensure unique rows for each country (these are unique because they're 0/1 for all rows of a given country) [rows = 167]
arrange(country_code)
# Display the table
print(regime_change_table)
# Table of all countries and select regime change variables: has_aut_ep, has_dem_ep, has_neither, autocratized, democratized, and stable, and total counts of autocratization and democratization episodes [DONE!!]
regime_change_status <- panel_data %>%
select(country_name, country_code, has_aut_ep, total_aut_ep, has_dem_ep, total_dem_ep, has_neither, autocratized, democratized, stable) %>%
distinct() %>% # Ensure unique rows for each country (these are unique because they're 0/1 for all rows of a given country) [rows = 167]
arrange(country_code)
# Display the table
print(regime_change_status)
# Frequency table of countries based on has_aut_ep, has_dem_ep, has_neither, autocratized, democratized, and stable variables [DONE!!]
freq_regime_change_status <- regime_change_table %>%
summarise(
Total_Countries = n(),
Countries_with_Autocratization_Episodes = sum(as.numeric(as.character(has_aut_ep)), na.rm = TRUE),
Countries_with_Democratization_Episodes = sum(as.numeric(as.character(has_dem_ep)), na.rm = TRUE),
Countries_with_Neither = sum(as.numeric(as.character(has_neither)), na.rm = TRUE),
Countries_that_Autocratized = sum(as.numeric(as.character(autocratized)), na.rm = TRUE),
Countries_that_Democratized = sum(as.numeric(as.character(democratized)), na.rm = TRUE),
Stable_Countries = sum(as.numeric(as.character(stable)), na.rm = TRUE)
) %>%
# pivot the freq_table to long format for better visualization
pivot_longer(cols = everything(), names_to = "Category", values_to = "Count")
# Frequency table of countries based on has_aut_ep, has_dem_ep, has_neither, autocratized, democratized, and stable variables [DONE!!]
freq_regime_change_status <- regime_change_status %>%
summarise(
Total_Countries = n(),
Countries_with_Autocratization_Episodes = sum(as.numeric(as.character(has_aut_ep)), na.rm = TRUE),
Countries_with_Democratization_Episodes = sum(as.numeric(as.character(has_dem_ep)), na.rm = TRUE),
Countries_with_Neither = sum(as.numeric(as.character(has_neither)), na.rm = TRUE),
Countries_that_Autocratized = sum(as.numeric(as.character(autocratized)), na.rm = TRUE),
Countries_that_Democratized = sum(as.numeric(as.character(democratized)), na.rm = TRUE),
Stable_Countries = sum(as.numeric(as.character(stable)), na.rm = TRUE)
) %>%
# pivot the freq_table to long format for better visualization
pivot_longer(cols = everything(), names_to = "Category", values_to = "Count")
# Convert the frequency table to a stargazer table for better visualization
stargazer(freq_regime_change_status,
type = "html",
summary = FALSE,
title = "Frequency Table of Regime Change Status",
digits = 0,
out = "regime_change_status_table.html")
# Convert the frequency table to a stargazer table for better visualization
stargazer(freq_regime_change_status,
type = "html",
summary = FALSE,
title = "Frequency Table of Regime Change Status",
digits = 0,
out = "compiled/results/stats/regime_change_status_table.html")
# Convert the frequency table to a stargazer table for better visualization
stargazer(freq_regime_change_status,
type = "html",
summary = FALSE,
title = "Frequency Table of Regime Change Status",
digits = 0,
out = "compiled_materials/results/stats/regime_change_status_table.html")
# Convert the regime change status table to a stargazer table for better visualization
stargazer(regime_change_status,
type = "html",
summary = FALSE,
title = "Regime Change Status of Countries",
digits = 0,
out = "compiled_materials/results/stats/regime_change_status.html")
# Convert the regime change status table to a stargazer table for better visualization
stargazer(regime_change_status,
type = "html",
summary = FALSE,
title = "Regime Change Status of Countries",
digits = 0,
out = "compiled_materials/results/stats/regime_change_status_by_country.html")
# Convert the frequency table to a stargazer table for better visualization
stargazer(freq_regime_change_status,
type = "html",
summary = FALSE,
title = "Frequency Table of Regime Change Status",
digits = 0,
out = "compiled_materials/results/stats/regime_change_status_counts.html")
# Create a table showing the number of years with data for each key variable by country
country_variable_coverage <- panel_data %>%
group_by(country_code) %>%
summarize(
country_name = first(country_name),  # Keep the country name for reference
total_years = n(),  # Total years in dataset for this country
spi_comp_years = sum(!is.na(spi_comp)),
sci_overall_years = sum(!is.na(sci_overall)),
sdg_overall_years = sum(!is.na(sdg_overall)),
di_score_years = sum(!is.na(di_score)),
log_gdppc_years = sum(!is.na(log_gdppc))
) %>%
ungroup() %>%
# Calculate coverage percentages
mutate(across(
c(spi_comp_years, sci_overall_years, sdg_overall_years, di_score_years, log_gdppc_years),
list(pct = ~round(. / total_years * 100, 1)),
.names = "{.col}_pct"
)) %>%
# Arrange by country name for easier reading
arrange(country_name)
print(country_variable_coverage)
View(country_variable_coverage)
# Create a table showing the number of years with data for each key variable by country
country_variable_coverage <- panel_data %>%
group_by(country_code) %>%
summarize(
country_name = first(country_name),  # Keep the country name for reference
total_years = n(),  # Total years in dataset for this country
spi_comp_years = sum(!is.na(spi_comp)),
sci_overall_years = sum(!is.na(sci_overall)),
sdg_overall_years = sum(!is.na(sdg_overall)),
di_score_years = sum(!is.na(di_score)),
log_gdppc_years = sum(!is.na(log_gdppc))
) %>%
ungroup() %>%
# Calculate coverage percentages
mutate(across(
c(spi_comp_years, sci_overall_years, sdg_overall_years, di_score_years, log_gdppc_years),
list(pct = ~round(. / total_years * 100, 1)),
.names = "{.col}_pct"
)) %>%
# Arrange by country name for easier reading
arrange(country_name)
print(country_variable_coverage)
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
# Load all packages from the packages.R file
source("packages.R")
# Load the panel data script
source("Comp2_panel_wrangling.R")
# Chunk 2
# Table of all countries and select regime change variables: has_aut_ep, has_dem_ep, has_neither, autocratized, democratized, and stable, and total counts of autocratization and democratization episodes [DONE!!]
regime_change_status <- panel_data %>%
select(country_name, country_code, has_aut_ep, total_aut_ep, has_dem_ep, total_dem_ep, has_neither, autocratized, democratized, stable) %>%
distinct() %>% # Ensure unique rows for each country (these are unique because they're 0/1 for all rows of a given country) [rows = 167]
arrange(country_code)
# Display the table
print(regime_change_status)
# Chunk 3
# Convert the regime change status table to a stargazer table for better visualization
stargazer(regime_change_status,
type = "html",
summary = FALSE,
title = "Regime Change Status of Countries",
digits = 0,
out = "compiled_materials/results/stats/regime_change_status_by_country.html")
# Chunk 4
# Frequency table of countries based on has_aut_ep, has_dem_ep, has_neither, autocratized, democratized, and stable variables [DONE!!]
freq_regime_change_status <- regime_change_status %>%
summarise(
Total_Countries = n(),
Countries_with_Autocratization_Episodes = sum(as.numeric(as.character(has_aut_ep)), na.rm = TRUE),
Countries_with_Democratization_Episodes = sum(as.numeric(as.character(has_dem_ep)), na.rm = TRUE),
Countries_with_Neither = sum(as.numeric(as.character(has_neither)), na.rm = TRUE),
Countries_that_Autocratized = sum(as.numeric(as.character(autocratized)), na.rm = TRUE),
Countries_that_Democratized = sum(as.numeric(as.character(democratized)), na.rm = TRUE),
Stable_Countries = sum(as.numeric(as.character(stable)), na.rm = TRUE)
) %>%
# pivot the freq_table to long format for better visualization
pivot_longer(cols = everything(), names_to = "Category", values_to = "Count")
# Chunk 5
# Convert the frequency table to a stargazer table for better visualization
stargazer(freq_regime_change_status,
type = "html",
summary = FALSE,
title = "Frequency Table of Regime Change Status",
digits = 0,
out = "compiled_materials/results/stats/regime_change_status_counts.html")
# Chunk 6
# Create a table showing the number of years with data for each key variable by country
country_variable_coverage <- panel_data %>%
group_by(country_code) %>%
summarize(
country_name = first(country_name),  # Keep the country name for reference
total_years = n(),  # Total years in dataset for this country
spi_comp_years = sum(!is.na(spi_comp)),
sci_overall_years = sum(!is.na(sci_overall)),
sdg_overall_years = sum(!is.na(sdg_overall)),
di_score_years = sum(!is.na(di_score)),
log_gdppc_years = sum(!is.na(log_gdppc))
) %>%
ungroup() %>%
# Calculate coverage percentages
mutate(across(
c(spi_comp_years, sci_overall_years, sdg_overall_years, di_score_years, log_gdppc_years),
list(pct = ~round(. / total_years * 100, 1)),
.names = "{.col}_pct"
)) %>%
# Arrange by country name for easier reading
arrange(country_name)
print(country_variable_coverage)
# Convert the country_variable_coverage table to a stargazer table for better visualization
stargazer(country_variable_coverage,
type = "html",
summary = FALSE,
title = "Country Variable Coverage",
digits = 1,
out = "compiled_materials/results/stats/country_variable_coverage.html")
print(country_variable_coverage)
View(country_variable_coverage)
