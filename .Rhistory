next
}
# Check for near-constant variables (threshold)
var_check <- sapply(temp_data[, c("log_gdppc", "population")], var)
if (any(var_check < 0.01)) {  # Increased from 1e-3 to 0.01
partial_corr_matrix[spi, sdg] <- NA
next
}
# Attempt 1: Standard partial correlation
tryCatch({
result <- ppcor::pcor(temp_data)
partial_corr_matrix[spi, sdg] <- result$estimate[1, 2]
}, error = function(e) {
# Attempt 2: Pseudoinverse-based correlation (more robust)
tryCatch({
cov_mat <- cov(temp_data)
pcor_mat <- corpcor::pcor.shrink(temp_data, verbose = FALSE)
partial_corr_matrix[spi, sdg] <- pcor_mat[1, 2]
}, error = function(e) {
# Fallback: Simple correlation without controls
cor_value <- cor(temp_data[, spi], temp_data[, sdg])
partial_corr_matrix[spi, sdg] <- cor_value
})
})
}
}
# Convert to data frame
matrix_df <- as.data.frame(partial_corr_matrix)
# Reshape the matrix into long format
melted_cormat <- melt(partial_corr_matrix)
matrix_spi_sdg <- ggplot(data = melted_cormat, aes(x = Var2, y = Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(
low = "orange", mid = "white", high = "steelblue", midpoint = 0,
limits = c(-1, 1), name = "Correlation"
) +
# Grey tiles for NA values (plot FIRST to avoid covering text)
geom_tile(
data = subset(melted_cormat, is.na(value)),
aes(x = Var2, y = Var1), fill = "grey90", color = "white"
) +
# Text with dynamic color based on |value|
geom_text(
aes(
label = ifelse(is.na(value), "", round(value, 2)),
color = abs(value) > 0.5  # White text for |cor| > 0.5
),
size = 2.5
) +
scale_color_manual(
guide = "none",  # Hide the color legend
values = c("black", "white")  # FALSE = black, TRUE = white
) +
theme_minimal() +
labs(
title = "Partial Correlation Matrix: SPI Pillars vs SDG Goals",
x = "SDG Goals",
y = "SPI Pillars"
) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, size = 9),
axis.text.y = element_text(size = 9),
legend.position = "right"
) +
coord_fixed()  # Maintain square aspect ratio
#show
matrix_spi_sdg
matrix_spi_sdg
rlang::last_trace()
melted_cormat
partial_corr_matrix
spi_pillars <- c("spi_comp", "p1_use", "p2_services", "p3_products", "p4_sources", "p5_infra")
sdg_goals <- c("sdg_overall", paste0("goal", 1:17))
#devise matrix
partial_corr_matrix <- matrix(NA, nrow = length(spi_pillars),
ncol = length(sdg_goals),
dimnames = list(spi_pillars, sdg_goals))
partial_corr_matrix
knitr::opts_chunk$set(
tidy = TRUE,
tidy.opts = list(width.cutoff = 60)
)
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# select path = "data/Main CSV Outputs/merged_cleaned_sdg.csv"
panel_data_s1 <- panel_data %>%
dplyr::select(country_name, country_code, year, spi_comp, di_score, di_score_lag1, di_score_lag2, log_gdppc, spi_comp_lag1, spi_comp_lag2, income_level_recoded) %>%
dplyr::arrange(country_code, year)
head(panel_data_s1)
# check lag structure is correct
head(panel_data_s1[, c("country_code", "year", "spi_comp", "spi_comp_lag1", "spi_comp_lag2",  "di_score", "di_score_lag1", "di_score_lag2")])
dim(panel_data_s1) # 1336 rows, 11 columns
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# select path = "data/Main CSV Outputs/merged_cleaned_sdg.csv"
panel_data_s1 <- panel_data %>%
dplyr::select(country_name, country_code, year, spi_comp, di_score, di_score_lag1, di_score_lag2, log_gdppc, spi_comp_lag1, spi_comp_lag2, income_level_recoded) %>%
dplyr::arrange(country_code, year)
panel_data_s1 <- panel_data %>%
dplyr::select(country_name, country_code, year, spi_comp, di_score, di_score_lag1, di_score_lag2, log_gdppc, spi_comp_lag1, spi_comp_lag2, income_level_recoded) %>%
dplyr::arrange(country_code, year)
# how many countries
length(unique(panel_data_s1$country_code))
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# select path = "data/Main CSV Outputs/merged_cleaned_sdg.csv"
panel_data_sdg <- panel_data %>%
dplyr::select(country_name, country_code, year, spi_comp, di_score, di_score_lag1, di_score_lag2, log_gdppc, spi_comp_lag1, spi_comp_lag2, income_level_recoded) %>%
dplyr::arrange(country_code, year)
knitr::opts_chunk$set(
tidy = TRUE,
tidy.opts = list(width.cutoff = 60)
)
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# select path = "data/Main CSV Outputs/merged_cleaned_sdg.csv"
panel_data_exclusive <- panel_data %>%
dplyr::select(country_name, country_code, year, spi_comp, di_score, di_score_lag1, di_score_lag2, log_gdppc, spi_comp_lag1, spi_comp_lag2, income_level_recoded) %>%
dplyr::arrange(country_code, year)
# how many countries
length(unique(panel_data_exclusive$country_code))
# check that lag structure is correct
head(panel_data_exclusive[, c("country_code", "year", "spi_comp", "spi_comp_lag1", "spi_comp_lag2",  "di_score", "di_score_lag1", "di_score_lag2")])
# check dimensions
dim(panel_data_exclusive)
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# select path = "data/Main CSV Outputs/merged_cleaned_sdg.csv"
panel_data_comp1_data <- panel_data %>%
dplyr::select(country_name, country_code, year, spi_comp, di_score, di_score_lag1, di_score_lag2, log_gdppc, spi_comp_lag1, spi_comp_lag2, income_level_recoded) %>%
dplyr::arrange(country_code, year)
# how many countries
length(unique(panel_data_comp1_data$country_code))
# check that lag structure is correct
head(panel_data_comp1_data[, c("country_code", "year", "spi_comp", "spi_comp_lag1", "spi_comp_lag2",  "di_score", "di_score_lag1", "di_score_lag2")])
# check dimensions
dim(panel_data_comp1_data)
panel_data <- panel_data_comp1_data
# Contemporaneous Effect: SPI ~ DI
ols_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data_s1)
# Contemporaneous Effect: SPI ~ DI
ols_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
ols_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L1, vcov = vcovHC(ols_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
ols_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L2, vcov = vcovHC(ols_spi_di_L2, cluster = "group", type = "HC1"))
# Contemporaneous Effect: SPI ~ DI
fd_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc +  factor(income_level_recoded),
index = c("country_code", "year"),
data = fd_data,
model = "fd"
)
summary(fd_spi_di, vcov = vcovHC(fd_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
fd_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded),
index = c("country_code", "year"),
data = fd_data,
model = "fd"
)
summary(fd_spi_di_L1, vcov = vcovHC(fd_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
fd_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded),
index = c("country_code", "year"),
data = fd_data,
model = "fd"
)
summary(fd_spi_di_L2, vcov = vcovHC(fd_spi_di_L2, cluster = "group", type = "HC1"))
# Contemporaneous Effect: SPI ~ DI
fe_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
fe_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L1, vcov = vcovHC(fe_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
fe_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L2, vcov = vcovHC(fe_spi_di_L2, cluster = "group", type = "HC1"))
panel_data <- panel_data_sdg
# Contemporaneous Effect: SPI ~ DI
ols_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
ols_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L1, vcov = vcovHC(ols_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
ols_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L2, vcov = vcovHC(ols_spi_di_L2, cluster = "group", type = "HC1"))
# Contemporaneous Effect: SPI ~ DI
fe_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
fe_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L1, vcov = vcovHC(fe_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
fe_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L2, vcov = vcovHC(fe_spi_di_L2, cluster = "group", type = "HC1"))
panel_data <- panel_data_exclusive
# Contemporaneous Effect: SPI ~ DI
ols_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
ols_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L1, vcov = vcovHC(ols_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
ols_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L2, vcov = vcovHC(ols_spi_di_L2, cluster = "group", type = "HC1"))
# Contemporaneous Effect: SPI ~ DI
fe_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
fe_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L1, vcov = vcovHC(fe_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
fe_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L2, vcov = vcovHC(fe_spi_di_L2, cluster = "group", type = "HC1"))
panel_data <- panel_data_comp1_data
# Contemporaneous Effect: SPI ~ DI
ols_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
ols_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L1, vcov = vcovHC(ols_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
ols_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L2, vcov = vcovHC(ols_spi_di_L2, cluster = "group", type = "HC1"))
# Contemporaneous Effect: SPI ~ DI
fe_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
fe_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L1, vcov = vcovHC(fe_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
fe_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L2, vcov = vcovHC(fe_spi_di_L2, cluster = "group", type = "HC1"))
panel_data <- panel_data_sdg
# Contemporaneous Effect: SPI ~ DI
ols_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
ols_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L1, vcov = vcovHC(ols_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
ols_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L2, vcov = vcovHC(ols_spi_di_L2, cluster = "group", type = "HC1"))
# --- FD MODELS TABLE ---
# extracting robust standard errors for the three FD models
rob_se_fd <- list(
coeftest(fd_spi_di, vcov = vcovHC(fd_spi_di, cluster = "group", type = "HC1"))[, 2],
coeftest(fd_spi_di_L1, vcov = vcovHC(fd_spi_di_L1, cluster = "group", type = "HC1"))[, 2],
coeftest(fd_spi_di_L2, vcov = vcovHC(fd_spi_di_L2, cluster = "group", type = "HC1"))[, 2]
)
# stargazer table for FD models
stargazer(
fd_spi_di, fd_spi_di_L1, fd_spi_di_L2,
se = rob_se_fd,
type = "html",
out = "figures/s1_fd_lags.html",
title = "Stage I Models: First Difference (Current and Lagged Effects)",
align = TRUE,
dep.var.labels = "SPI Overall Score",
column.labels = c("Contemporaneous", "Lag 1", "Lag 2"),
covariate.labels = c("DI Composite", "Lagged DI (t-1)", "Lagged DI (t-2)",  "Log(GDPper-capita)", "Lower-Middle Income (LMIC)", "Upper-Middle Income (UMIC)", "High Income (HIC)", "Intercept"),
report = "vcs*",
notes = "Robust standard errors clustered by country in parentheses",
omit = "factor\\(year\\)",
model.names = FALSE
)
# Contemporaneous Effect: SPI ~ DI
fe_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
fe_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L1, vcov = vcovHC(fe_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
fe_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L2, vcov = vcovHC(fe_spi_di_L2, cluster = "group", type = "HC1"))
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# select path = "data/Main CSV Outputs/merged_cleaned_sdg.csv"
panel_data_spi <- panel_data %>%
dplyr::select(country_name, country_code, year, spi_comp, di_score, di_score_lag1, di_score_lag2, log_gdppc, spi_comp_lag1, spi_comp_lag2, income_level_recoded) %>%
dplyr::arrange(country_code, year)
# how many countries
length(unique(panel_data_spi$country_code))
# check that lag structure is correct
head(panel_data_spi[, c("country_code", "year", "spi_comp", "spi_comp_lag1", "spi_comp_lag2",  "di_score", "di_score_lag1", "di_score_lag2")])
# check dimensions
dim(panel_data_spi)
# testing dataframes for sensitivity of results
panel_data <- panel_data_spi
# Contemporaneous Effect: SPI ~ DI
ols_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
ols_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L1, vcov = vcovHC(ols_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
ols_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di_L2, vcov = vcovHC(ols_spi_di_L2, cluster = "group", type = "HC1"))
# --- FD MODELS TABLE ---
# extracting robust standard errors for the three FD models
rob_se_fd <- list(
coeftest(fd_spi_di, vcov = vcovHC(fd_spi_di, cluster = "group", type = "HC1"))[, 2],
coeftest(fd_spi_di_L1, vcov = vcovHC(fd_spi_di_L1, cluster = "group", type = "HC1"))[, 2],
coeftest(fd_spi_di_L2, vcov = vcovHC(fd_spi_di_L2, cluster = "group", type = "HC1"))[, 2]
)
# stargazer table for FD models
stargazer(
fd_spi_di, fd_spi_di_L1, fd_spi_di_L2,
se = rob_se_fd,
type = "html",
out = "figures/s1_fd_lags.html",
title = "Stage I Models: First Difference (Current and Lagged Effects)",
align = TRUE,
dep.var.labels = "SPI Overall Score",
column.labels = c("Contemporaneous", "Lag 1", "Lag 2"),
covariate.labels = c("DI Composite", "Lagged DI (t-1)", "Lagged DI (t-2)",  "Log(GDPper-capita)", "Lower-Middle Income (LMIC)", "Upper-Middle Income (UMIC)", "High Income (HIC)", "Intercept"),
report = "vcs*",
notes = "Robust standard errors clustered by country in parentheses",
omit = "factor\\(year\\)",
model.names = FALSE
)
# Contemporaneous Effect: SPI ~ DI
fe_spi_di <- plm(
formula = spi_comp ~ di_score + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Adding Lag1: SPI ~ DI
fe_spi_di_L1 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L1, vcov = vcovHC(fe_spi_di_L1, cluster = "group", type = "HC1"))
# Adding Lag2: SPI ~ DI
fe_spi_di_L2 <- plm(
formula = spi_comp ~ di_score + di_score_lag1 + di_score_lag2 + log_gdppc + factor(income_level_recoded) + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within")
summary(fe_spi_di_L2, vcov = vcovHC(fe_spi_di_L2, cluster = "group", type = "HC1"))
head(panel_data_spi[, c("country_code", "year", "spi_comp", "spi_comp_lag1", "spi_comp_lag2",  "di_score", "di_score_lag1", "di_score_lag2")])
length(unique(panel_data_spi$country_code))
length(unique(panel_data_exclusive$country_code))
length(unique(panel_data_sdg$country_code))
length(unique(panel_data_comp1_data$country_code))
tinytex::install_tinytex()
