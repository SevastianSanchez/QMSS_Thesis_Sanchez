model = "within", #FE
effect = "twoways")
rob_sum_base <- summary(fe_sdg_spi_base, vcov = vcovHC(fe_sdg_spi_base, cluster = "group", type = "HC1"))
rob_sum_base
# No quadratic Terms Applied - Baseline [SIGNIFICANT DI]
fe_sdg_spi_base <- plm(formula = sdg_overall ~ dplyr::lag(spi_comp, n = 1) + dplyr::lag(di_score, n = 1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways")
rob_sum_base <- summary(fe_sdg_spi_base, vcov = vcovHC(fe_sdg_spi_base, cluster = "group", type = "HC1"))
rob_sum_base
fe_sdg_spi_base
fe_sdg_spi_base <- plm(formula = sdg_overall ~ dplyr::lag(spi_comp, n = 1) + dplyr::lag(di_score, n = 1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways")
summary(fe_sdg_spi_base)
summary(fe_sdg_spi_base)
rob_sum_base <- summary(fe_sdg_spi_base, vcov = vcovHC(fe_sdg_spi_base, cluster = "group", type = "HC1"))
rob_sum_base
fe_quads_s2_m2 <- plm(formula =
sdg_overall ~ dplyr::lag(spi_comp, n = 1) + dplyr::lag(spi_comp_quad, n = 1) + dplyr::lag(di_score, n = 1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways")
fe_quads_s2_m2 <- plm(formula =
sdg_overall ~ dplyr::lag(spi_comp, n = 1) + dplyr::lag(I(spi_comp^2), n = 1) + dplyr::lag(I(di_score^2), n = 1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways")
rob_sum_m2 <- summary(fe_quads_s2_m2, vcov = vcovHC(fe_quads_s2_m2, cluster = "group", type = "HC1"))
rob_sum_m2
fe_quads_s2_m2 <- plm(formula =
sdg_overall ~ dplyr::lag(cen_spi_comp, n = 1) + dplyr::lag(cen_spi_comp_quad, n = 1) + dplyr::lag(cen_di_score, n = 1) + cen_log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways")
rob_sum_m2 <- summary(fe_quads_s2_m2, vcov = vcovHC(fe_quads_s2_m2, cluster = "group", type = "HC1"))
rob_sum_m2
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Chunk 2
# Full POLS model: SPI ~ DI
ols_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
# plot relationship: lagged DI vs SPI
spi_di_s1_scatter <- ggplot(panel_data, aes(x = dplyr::lag(di_score, 1), y = spi_comp)) +
geom_point(color = "steelblue", size = 1, alpha = 0.65) +
geom_smooth(method = "lm",
se = TRUE, color = "darkblue", size = 1) +
labs(
title = "Effect of Democracy Levels on Statistical Capacity",
x = "Lagged Democracy Index (0-10 Scale)",
y = "SPI Composite (0-100 Scale)"
) +
theme_minimal()
spi_di_s1_scatter
# Save to specific folder
ggsave("figures/stage_1_n_2_scatterplots/spi_di_s1_scatterplot.png", spi_di_s1_scatter, width = 8, height = 6)
# Mediator: SPI ~ DI (M ~ X)
fd_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = fd_data, #sub = (has_aut_ep == TRUE),
model = "fd"
)
# Country-level custard Robust SEs
summary(fd_spi_di, vcov = vcovHC(fd_spi_di, cluster = "group", type = "HC1"))
# Mediator: SPI ~ DI (M ~ X)
fe_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways"
)
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Mediator: SPI ~ DI (M ~ X)
fe_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways"
)
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
fe_spi_di <- plm(
formula = spi_comp ~ di_score + di_score + log_gdppc + income_level_recoded + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways"
)
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
fe_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + di_score + log_gdppc + income_level_recoded + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways"
)
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Mediator: SPI ~ DI (M ~ X)
fe_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded + factor(year),
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways"
)
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
View(panel_data)
fd_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = fd_data, #sub = (has_aut_ep == TRUE),
model = "fd"
)
# Country-level custard Robust SEs
summary(fd_spi_di, vcov = vcovHC(fd_spi_di, cluster = "group", type = "HC1"))
# Mediator: SPI ~ DI (M ~ X)
fe_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways"
)
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Extracting robust standard errors for each model
rob_se_ols <- coeftest(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
rob_se_fd <- coeftest(fd_spi_di, vcov = vcovHC(fd_spi_di, cluster = "group", type = "HC1"))
rob_se_fe <- coeftest(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Create a list of robust standard errors for stargazer
robust_se_list <- list(
rob_se_ols[, 2],
rob_se_fd[, 2],
rob_se_fe[, 2]
)
# Create a stargazer table for the three models
stargazer(
ols_spi_di, fd_spi_di, fe_spi_di,
se = robust_se_list,
type = "html",
out = "figures/s1_base_models.html",
title = "Stage 1: DI -> SPI Models",
align = TRUE,
dep.var.labels = "SPI Overall Score",
column.labels = c("POLS", "FD", "FE"),
report = "vcs*",
omit = "factor\\(year\\)",  # Omits year fixed effects from display
model.names = FALSE
)
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Chunk 2
ols_sdg_spi <- plm(formula = sdg_overall ~ dplyr::lag(spi_comp, 1) + dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded + factor(year),
model = "pooling",
index = c("country_code", "year"),
data = panel_data)
summary(ols_sdg_spi, vcov = vcovHC(ols_sdg_spi, cluster = "group", type = "HC1"))
# plot relationship: Lagged SPI vs SDG
sdg_spi_s2_scatter <- ggplot(panel_data, aes(x = dplyr::lag(spi_comp, 1), y = sdg_overall)) +
geom_point(color = "steelblue4", size = 1, alpha = 0.65) +
geom_smooth(method = "lm",
se = TRUE, color = "darkgreen", size = 1) +
labs(
title = "Effect of Statistical Capacity on SDG Performance",
x = "Lagged SPI Composite (0-100 Scale)",
y = "SDG Composite (0-100 Scale)"
) +
theme_minimal()
# Save to specific folder
ggsave("figures/stage_1_n_2_scatterplots/sdg_spi_s2_scatterplot.png", sdg_spi_s2_scatter, width = 8, height = 6)
fd_sdg_spi <- plm(
formula = sdg_overall ~ dplyr::lag(spi_comp, 1) + dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = fd_data,
model = "fd"
)
# Country-level custard Robust SEs
summary(fd_sdg_spi, vcov = vcovHC(fd_sdg_spi, cluster = "group", type = "HC1"))
# Outcome: SDG ~ SPI (Y ~ M)
fe_sdg_spi <- plm(
sdg_overall ~ dplyr::lag(spi_comp, 1) + dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways"
)
summary(fe_sdg_spi, vcov = vcovHC(fe_sdg_spi, cluster = "group", type = "HC1")) # Robust SEs
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Chunk 2
ols_sdg_spi <- plm(formula = sdg_overall ~ dplyr::lag(spi_comp, 1) + dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded + factor(year),
model = "pooling",
index = c("country_code", "year"),
data = panel_data)
summary(ols_sdg_spi, vcov = vcovHC(ols_sdg_spi, cluster = "group", type = "HC1"))
# plot relationship: Lagged SPI vs SDG
sdg_spi_s2_scatter <- ggplot(panel_data, aes(x = dplyr::lag(spi_comp, 1), y = sdg_overall)) +
geom_point(color = "steelblue4", size = 1, alpha = 0.65) +
geom_smooth(method = "lm",
se = TRUE, color = "darkgreen", size = 1) +
labs(
title = "Effect of Statistical Capacity on SDG Performance",
x = "Lagged SPI Composite (0-100 Scale)",
y = "SDG Composite (0-100 Scale)"
) +
theme_minimal()
# Save to specific folder
ggsave("figures/stage_1_n_2_scatterplots/sdg_spi_s2_scatterplot.png", sdg_spi_s2_scatter, width = 8, height = 6)
# Chunk 3
# Outcome: SDG ~ SPI (Y ~ M)
fd_sdg_spi <- plm(
formula = sdg_overall ~ dplyr::lag(spi_comp, 1) + dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = fd_data,
model = "fd"
)
# Country-level custard Robust SEs
summary(fd_sdg_spi, vcov = vcovHC(fd_sdg_spi, cluster = "group", type = "HC1"))
# Chunk 4
# Outcome: SDG ~ SPI (Y ~ M)
fe_sdg_spi <- plm(
sdg_overall ~ dplyr::lag(spi_comp, 1) + dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways"
)
summary(fe_sdg_spi, vcov = vcovHC(fe_sdg_spi, cluster = "group", type = "HC1")) # Robust SEs
# Chunk 5
# stargazer table for POLS, FD, and FE models
stargazer(ols_sdg_spi, fd_sdg_spi, fe_sdg_spi,
se = list(sqrt(diag(vcovHC(ols_sdg_spi, cluster = "group", type = "HC1"))),
sqrt(diag(vcovHC(fd_sdg_spi, cluster = "group", type = "HC1"))),
sqrt(diag(vcovHC(fe_sdg_spi, cluster = "group", type = "HC1")))),
title = "Stage 2 Models: SDG ~ SPI",
align = TRUE,
dep.var.labels = "SDG Overall Score",
column.labels = c("POLS", "FD", "FE"),
covariate.labels = c("Lagged SPI Composite", "Lagged DI Score", "Log GDP per Capita",
"Income Level (Recoded)", "Year Fixed Effects"),
notes = "Robust standard errors clustered by country in parentheses",
type = "html", # Change to "latex" for LaTeX output or "html" for Word
report = "vcs*", # Shows significance stars and standard errors
model.numbers = FALSE,
keep.stat = c("n", "rsq", "adj.rsq"),
omit = "factor\\(year\\)",  # Omits year fixed effects from display
out = "figures/s2_base_models.html") #saved as html
# Chunk 6
# AIC/BIC function
source('plm_aic_bic_function.R')
# POLS
plm_aic_bic(ols_sdg_spi)
# First difference
plm_aic_bic(fd_sdg_spi)
# Fixed Effects
plm_aic_bic(fe_sdg_spi)
ols_sdg_spi <- lm(sdg_overall ~ dplyr::lag(spi_comp, 1) + dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded + factor(year), data = panel_data) # regular linear model
fd_sdg_spi <- lm(sdg_overall ~ dplyr::lag(spi_comp, 1) + dplyr::lag(di_diff, 1) + log_gdppc_diff + income_level_recoded, data = fd_data)
fe_sdg_spi <- lm(sdg_overall ~ dplyr::lag(spi_comp, 1) + dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded + factor(year) + factor(country_code), data = panel_data)
# Run RESET tests w/ Robust SEs [Stage 2]
resettest(ols_sdg_spi, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
resettest(fd_sdg_spi, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
resettest(fe_sdg_spi, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
# Chunk 1
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Chunk 2
# Full POLS model: SPI ~ DI
ols_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded + factor(year),
index = c("country_code", "year"),
model = "pooling",
data = panel_data)
summary(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
# plot relationship: lagged DI vs SPI
spi_di_s1_scatter <- ggplot(panel_data, aes(x = dplyr::lag(di_score, 1), y = spi_comp)) +
geom_point(color = "steelblue", size = 1, alpha = 0.65) +
geom_smooth(method = "lm",
se = TRUE, color = "darkblue", size = 1) +
labs(
title = "Effect of Democracy Levels on Statistical Capacity",
x = "Lagged Democracy Index (0-10 Scale)",
y = "SPI Composite (0-100 Scale)"
) +
theme_minimal()
spi_di_s1_scatter
# Save to specific folder
ggsave("figures/stage_1_n_2_scatterplots/spi_di_s1_scatterplot.png", spi_di_s1_scatter, width = 8, height = 6)
# Chunk 3
# Mediator: SPI ~ DI (M ~ X)
fd_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = fd_data, #sub = (has_aut_ep == TRUE),
model = "fd"
)
# Country-level custard Robust SEs
summary(fd_spi_di, vcov = vcovHC(fd_spi_di, cluster = "group", type = "HC1"))
# Chunk 4
# Mediator: SPI ~ DI (M ~ X)
fe_spi_di <- plm(
formula = spi_comp ~ dplyr::lag(di_score, n=1) + log_gdppc + income_level_recoded,
index = c("country_code", "year"),
data = panel_data,
model = "within", #FE
effect = "twoways"
)
summary(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Chunk 5
# Extracting robust standard errors for each model
rob_se_ols <- coeftest(ols_spi_di, vcov = vcovHC(ols_spi_di, cluster = "group", type = "HC1"))
rob_se_fd <- coeftest(fd_spi_di, vcov = vcovHC(fd_spi_di, cluster = "group", type = "HC1"))
rob_se_fe <- coeftest(fe_spi_di, vcov = vcovHC(fe_spi_di, cluster = "group", type = "HC1"))
# Create a list of robust standard errors for stargazer
robust_se_list <- list(
rob_se_ols[, 2],
rob_se_fd[, 2],
rob_se_fe[, 2]
)
# Create a stargazer table for the three models
stargazer(
ols_spi_di, fd_spi_di, fe_spi_di,
se = robust_se_list,
type = "html",
out = "figures/s1_base_models.html",
title = "Stage 1: DI -> SPI Models",
align = TRUE,
dep.var.labels = "SPI Overall Score",
column.labels = c("POLS", "FD", "FE"),
report = "vcs*",
omit = "factor\\(year\\)",  # Omits year fixed effects from display
model.names = FALSE
)
ols_spi_di <- lm(spi_comp ~ dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded + factor(year), data = panel_data) # regular linear model
fd_spi_di <- lm(spi_diff ~ dplyr::lag(di_diff, 1) + log_gdppc_diff + income_level_recoded, data = fd_data)
fe_spi_di <- lm(spi_comp ~ dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded + factor(year) + factor(country_code), data = panel_data)
resettest(ols_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
resettest(fd_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
resettest(fe_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
View(panel_data)
# transforming to base R lm()
ols_spi_di <- lm(spi_comp ~ dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded + factor(year), data = panel_data) # regular linear model
fd_spi_di <- lm(spi_diff ~ dplyr::lag(di_diff, 1) + log_gdppc_diff + income_level_recoded, data = fd_data)
fe_spi_di <- lm(spi_comp ~ dplyr::lag(di_score, 1) + log_gdppc + income_level_recoded + factor(year) + factor(country_code), data = panel_data)
# Performing RESET tests for the base models
resettest(ols_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
resettest(fd_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
resettest(fe_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
# Saving results to a dataframe
s1_reset_results <- data.frame(
model = c("ols_spi_di", "fd_spi_di", "fe_spi_di"),
F_statistic = c(resettest(ols_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))$statistic,
resettest(fd_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))$statistic,
resettest(fe_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))$statistic),
p_value = c(resettest(ols_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))$p.value,
resettest(fd_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))$p.value,
resettest(fe_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))$p.value)
)
print(s1_reset_results)
# Save the results to a CSV file
write.csv(s1_reset_results, file = "output_CSVs/s1_reset_results.csv", row.names = FALSE)
# Performing RESET tests for the base models
resettest(ols_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
resettest(fd_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
resettest(fe_spi_di, power = 2:3, type = "regressor",
vcov = function(x) vcovHC(x, cluster = "group", type = "HC1"))
# Load necessary libraries
library(plm)
library(ggplot2)
library(reshape2)
library(dplyr)
library(car)  # For VIF calculation
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
# Load necessary libraries
library(plm)
library(ggplot2)
library(reshape2)
library(dplyr)
library(car)  # For VIF calculation
# set working directory
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries/packages
source("packages.R")
# load data
source("Comp2_panel_wrangling.R")
panel_data <- panel_data %>%
dplyr::select(sdg_overall, spi_comp, di_score, log_gdppc, country_code, year)
# Impute missing data: log_gdppc
panel_data <- panel_data %>%
mutate(
log_gdppc = ifelse(is.na(log_gdppc), median(log_gdppc, na.rm = TRUE), log_gdppc)
)
# Calculate the correlation matrix
correlation_matrix <- cor(panel_data[, c("sdg_overall", "spi_comp", "di_score", "log_gdppc")], use = "pairwise.complete.obs")
# Convert the correlation matrix to a data frame for ggplot
melted_correlation <- melt(correlation_matrix)
# Visualize the correlation matrix using ggplot2
correlation_plot <- ggplot(data = melted_correlation, aes(x = Var2, y = Var1, fill = value)) +
geom_tile(color = "white") +
scale_fill_gradient2(
low = "red", mid = "white", high = "darkgreen", midpoint = 0,
limits = c(-1, 1), name = "Correlation"
) +
geom_text(aes(label = round(value, 2)), color = "black", size = 3) +
theme_minimal() +
labs(title = "Correlation Matrix: SDG Score, SPI Score, DI Score, and Log GDP per Capita",
x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Show the correlation plot
correlation_plot
# save the plot
ggsave("figures/correlation_matrix_SDG_SPI.png", plot = correlation_plot, width = 8, height = 6, dpi = 300)
ggsave("figures/correlation_matrix_main_vars.png", plot = correlation_plot, width = 5, height = 5, dpi = 300)
ggsave("figures/correlation_matrix_main_vars.png", plot = correlation_plot, width = 5, height = 4, dpi = 300)
# Visualize the correlation matrix using ggplot2
correlation_plot <- ggplot(data = melted_correlation, aes(x = Var2, y = Var1, fill = value)) +
geom_tile(color = "black") +
scale_fill_gradient2(
low = "red", mid = "white", high = "darkgreen", midpoint = 0,
limits = c(-1, 1), name = "Correlation"
) +
geom_text(aes(label = round(value, 2)), color = "black", size = 3) +
theme_minimal() +
labs(title = "Correlation Matrix: SDG Score, SPI Score, DI Score, and Log GDP per Capita",
x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Show the correlation plot
correlation_plot
# save the plot
ggsave("figures/correlation_matrix_main_vars.png", plot = correlation_plot, width = 5, height = 4, dpi = 300)
# Calculate the correlation matrix
correlation_matrix <- cor(panel_data[, c("sdg_overall", "spi_comp", "di_score", "log_gdppc")], use = "pairwise.complete.obs")
# Convert the correlation matrix to a data frame for ggplot
melted_correlation <- melt(correlation_matrix)
# Visualize the correlation matrix using ggplot2
correlation_plot <- ggplot(data = melted_correlation, aes(x = Var2, y = Var1, fill = value)) +
geom_tile(color = "black") +
scale_fill_gradient2(
low = "red", mid = "white", high = "darkgreen", midpoint = 0,
limits = c(-1, 1), name = "Correlation"
) +
geom_text(aes(label = round(value, 2)), color = "black", size = 3) +
theme_minimal() +
labs(title = "Correlation Matrix: Main Variables",
x = "", y = "") +
theme(axis.text.x = element_text(angle = 45, hjust = 1))
# Show the correlation plot
correlation_plot
# save the plot
ggsave("figures/correlation_matrix_main_vars.png", plot = correlation_plot, width = 5, height = 4, dpi = 300)
View(all_data)
View(melted_correlation)
