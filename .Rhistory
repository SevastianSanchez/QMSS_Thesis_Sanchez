df_2 <- data.frame(y_var, x1_var, x2_var, x3_var, x4_var, x5_var, x6_var)
#OLS lm & full summary table
lm2 <- lm(y_var ~ x1_var + x2_var + x3_var + x4_var + x5_var + x6_var, data=df_2)
summary(lm2)
#plotting residuals
plot(lm2)
View(merged)
sdg_spi_corr <- cor(merged$sdg_overall, merged$spi_comp)^2
sdg_sci_corr <- cor(merged$sdg_overall, merged$sci_overall)^2
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
View(df.omit)
# comparing correlation btw x-vars
merged.omit <- na.omit(merged)
sdg_spi_corr <- cor(merged.omit$sdg_overall, merged$spi_comp)^2 #x-var = spi
library(devtools)
library(tidyr)
library(dplyr)
library(vdemdata) # call vdem package
library(readr) #loading data
library(readxl)
library(stargazer)
#Vdem package from github
vdem <- vdemdata::vdem  #loading data
#spi csv from github
url <- "https://raw.githubusercontent.com/worldbank/SPI/refs/heads/master/03_output_data/SPI_index.csv"
spi <- read_csv(url)
#sdg excel from directory
sdg <- read_excel("~/Desktop/OneDrive/OneDrive/QMSS Thesis/Datasets/SDR2024-data.xlsx", sheet = "Backdated SDG Index")
#sci csv from directory
sci_df <- read_csv("~/Desktop/OneDrive/OneDrive/QMSS Thesis/Datasets/SCI_All_Dim_TS.csv")
#Lab 3 merged
# merged_L3 <- read_csv("~/Documents/GitHub/Timeseries-SDGs-SPI-Vars/merged_L3.csv")
#selecting democracy indices and controls
vdem <- vdem %>%
dplyr::select(country_name, country_text_id, year, v2x_regime, v2x_regime_amb, v2x_polyarchy, v2x_libdem, v2x_partipdem, v2x_delibdem, v2x_egaldem, v2xel_frefair, v2x_accountability, v2x_veracc, v2x_horacc, v2x_diagacc, v2xca_academ, v2x_freexp_altinf, e_gdp, e_gdppc, e_wb_pop, v3ststybcov, v3ststybpub, v3stcensus, v3ststatag) %>%
filter(year > 1999) %>% #Only 1999 and up
rename(country_code = country_text_id, #renaming country code (new_name = old_name)
regime_type = v2x_regime,
regime_type_amb = v2x_regime_amb,
elect_dem = v2x_polyarchy,
lib_dem = v2x_libdem,
part_dem = v2x_partipdem,
delib_dem = v2x_delibdem,
egal_dem = v2x_egaldem,
freefair = v2xel_frefair,
#freefair_ord = e_v2xel_frefair,
accountability = v2x_accountability,
vt_account = v2x_veracc,
hz_account = v2x_horacc,
diag_account = v2x_diagacc,
academ_free = v2xca_academ,
freexp_altinfo = v2x_freexp_altinf,
gdp = e_gdp,
gdp_pc = e_gdppc,
population = e_wb_pop,
stat_agency = v3ststatag,
stat_yb_cov = v3ststybcov,
stat_yb_pub = v3ststybpub,
census = v3stcensus,
)
# To be added: e_v2xel_frefair,
#vdem$v2xca_academ <- vdem$v2xca_academ*100
#vdem$v2x_libdem <- vdem$v2x_libdem*100
#selecting and renaming spi vars
spi <- spi %>%
select(country, iso3c, date, SPI.INDEX, SPI.INDEX.PIL1, SPI.INDEX.PIL2, SPI.INDEX.PIL3, SPI.INDEX.PIL4, SPI.INDEX.PIL5) %>%
rename(country_name = country) %>%
rename(country_code = iso3c) %>%
rename(year = date) %>%
rename(spi_comp = SPI.INDEX) %>% #SPI composite score, average of p1-5
rename(p1_use = SPI.INDEX.PIL1) %>% #SPI pillar 1, Data use
rename(p2_services = SPI.INDEX.PIL2) %>% #SPI pillar, 2 Data services
rename(p3_products = SPI.INDEX.PIL3) %>% #SPI pillar, 3 Data products
rename(p4_sources = SPI.INDEX.PIL4) %>% #SPI pillar, 4 Data sources
rename(p5_infra = SPI.INDEX.PIL5) #SPI pillar 5, Data infrastructure
#full dataset
sci <- sci_df %>%
dplyr::select(country_name, country_code, Year, IQ.SCI.OVRL, IQ.SCI.MTHD, IQ.SCI.PRDC, IQ.SCI.SRCE, everything()) %>%
rename(year = Year,
sci_overall = IQ.SCI.OVRL,
sci_method = IQ.SCI.MTHD,
sci_periodicity = IQ.SCI.PRDC,
sci_source = IQ.SCI.SRCE)
sci$year <- as.numeric(sci$year)
#for merging (only sci score variables selected)
sci_scores <- sci %>%
select(country_name, country_code, year, sci_overall, sci_method, sci_periodicity, sci_source)
#select sdg goals & composite
sdg <- sdg %>%
dplyr::select("country_name", "country_code", "year", "sdg_overall", "goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal3", "goal14", "goal15", "goal16", "goal17")
#merge spi, sci, sdg and vdem data
merged <- left_join(sdg, spi, by = c("year", "country_code"))
merged <- left_join(merged, sci_scores, by = c("country_code", "year"))
merged <- left_join(merged, vdem, by = c("country_code", "year"))
#rm duplicate col names
colnames(merged) <- make.unique(colnames(merged)) # Make column names unique
#data type changes
merged$year <- as.integer(merged$year)
merged <- merged %>%
mutate_at(c("spi_comp", "p1_use", "p2_services", "p3_products", "p4_sources", "p5_infra", "sci_overall", "sci_method", "sci_periodicity", "sci_source"), as.numeric)
#exporting time series data AS: merged_ts.csv ; will save to current working directory
write.table(merged, file = "merged_ts.csv", row.names=F, sep = ",")
#subset for only 2019
merged_cs_2019 <- merged[merged$year==2019,]
#exporting cross-sectional 2019 data AS: merged_cs2019; will save to current working directory
write.table(merged_cs_2019, file = "merged_cs2019.csv", row.names=F, sep = ",")
# subset for Spain
merged_esp_ts <- merged[merged$country_code=="ESP",]
#exporting Spain time series AS: merged_esp_ts; will save to current working directory
write.table(merged_esp_ts, file = "merged_esp_ts.csv", row.names=F, sep = ",")
# x & y variables
y_var <- merged$sdg_overall
x_var <- merged$spi_comp
df <- data.frame(x_var, y_var)
#correlation coefficient (x, y)
df.omit <- na.omit(df) # removing NA's -needed for cor() function
correlation <- cor(df.omit$x_var, df.omit$y_var)^2
string_corcoef <- "Correlation coefficient:"
paste(string_corcoef, correlation) # pasting result
#OLS lm & full summary table
lm1 <- lm(y_var ~ x_var, data=df)
summary(lm1)
#plotting scatterplot
plot(df$y_var, df$x_var)
abline(lm1)
# comparing correlation btw x-vars
merged.omit <- na.omit(merged)
sdg_spi_corr <- cor(merged.omit$sdg_overall, merged$spi_comp)^2 #x-var = spi
rm(merged.omit)
sdg_overall <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(sdg_overall, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
sdg_sci_corr <- cor(df$sdg_overall, df$x_var_sci)^2 #x-var 2 = sci
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
sdg_overall <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(sdg_overall, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$x_var_spi, df$sdg_overall)^2 #x-var 1 = spi
sdg_sci_corr <- cor(df$sdg_overall, df$x_var_sci)^2 #x-var 2 = sci
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
sdg_overall <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(sdg_overall, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
sdg_sci_corr <- cor(df$sdg_overall, df$x_var_sci)^2 #x-var 2 = sci
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
sdg_overall <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(sdg_overall, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
sdg_sci_corr <- cor(df$sdg_overall, df$x_var_sci)^2 #x-var 2 = sci
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
sdg_overall <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(sdg_overall, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
sdg_sci_corr <- cor(df$sdg_overall, df$x_var_sci)^2 #x-var 2 = sci
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
sdg_overall <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(sdg_overall, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
sdg_sci_corr <- cor(df$sdg_overall, df$x_var_sci)^2 #x-var 2 = sci
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
sdg_overall <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(sdg_overall, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
sdg_sci_corr <- cor(df$sdg_overall, df$x_var_sci)^2 #x-var 2 = sci
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
sdg_overall <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(sdg_overall, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
sdg_sci_corr <- cor(df$sdg_overall, df$x_var_sci)^2 #x-var 2 = sci
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
sdg_overall <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(sdg_overall, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
sdg_sci_corr <- cor(df$sdg_overall, df$x_var_sci)^2 #x-var 2 = sci
# ...
#more possible predictors ...
#paste results
paste(string_corcoef, sdg_spi_corr) # sdg x spi
paste(string_corcoef, sdg_sci_corr) # sdg x sci
?mutate_at
y_var <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(y_var, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
library(tidyr)
library(dplyr)
library(vdemdata) # call vdem package
library(readr) #loading data
library(readxl)
library(stargazer)
library(devtools)
library(tidyr)
library(dplyr)
library(vdemdata) # call vdem package
library(readr) #loading data
library(readxl)
library(stargazer)
library(devtools)
library(tidyr)
library(dplyr)
library(vdemdata) # call vdem package
library(readr) #loading data
library(readxl)
library(stargazer)
knitr::opts_chunk$set(echo = TRUE)
#Vdem package from github
vdem <- vdemdata::vdem  #loading data
#spi csv from github
url <- "https://raw.githubusercontent.com/worldbank/SPI/refs/heads/master/03_output_data/SPI_index.csv"
spi <- read_csv(url)
#sdg excel from directory
sdg <- read_excel("~/Desktop/OneDrive/OneDrive/QMSS Thesis/Datasets/SDR2024-data.xlsx", sheet = "Backdated SDG Index")
#sci csv from directory
sci_df <- read_csv("~/Desktop/OneDrive/OneDrive/QMSS Thesis/Datasets/SCI_All_Dim_TS.csv")
#Lab 3 merged
# merged_L3 <- read_csv("~/Documents/GitHub/Timeseries-SDGs-SPI-Vars/merged_L3.csv")
knitr::opts_chunk$set(echo = TRUE)
library(devtools)
library(tidyr)
library(dplyr)
library(vdemdata) # call vdem package
library(readr) #loading data
library(readxl)
library(stargazer)
#selecting democracy indices and controls
vdem <- vdem %>%
dplyr::select(country_name, country_text_id, year, v2x_regime, v2x_regime_amb, v2x_polyarchy, v2x_libdem, v2x_partipdem, v2x_delibdem, v2x_egaldem, v2xel_frefair, v2x_accountability, v2x_veracc, v2x_horacc, v2x_diagacc, v2xca_academ, v2x_freexp_altinf, e_gdp, e_gdppc, e_wb_pop, v3ststybcov, v3ststybpub, v3stcensus, v3ststatag) %>%
filter(year > 1999) %>% #Only 1999 and up
rename(country_code = country_text_id, #renaming country code (new_name = old_name)
regime_type = v2x_regime,
regime_type_amb = v2x_regime_amb,
elect_dem = v2x_polyarchy,
lib_dem = v2x_libdem,
part_dem = v2x_partipdem,
delib_dem = v2x_delibdem,
egal_dem = v2x_egaldem,
freefair = v2xel_frefair,
#freefair_ord = e_v2xel_frefair,
accountability = v2x_accountability,
vt_account = v2x_veracc,
hz_account = v2x_horacc,
diag_account = v2x_diagacc,
academ_free = v2xca_academ,
freexp_altinfo = v2x_freexp_altinf,
gdp = e_gdp,
gdp_pc = e_gdppc,
population = e_wb_pop,
stat_agency = v3ststatag,
stat_yb_cov = v3ststybcov,
stat_yb_pub = v3ststybpub,
census = v3stcensus,
)
# To be added: e_v2xel_frefair,
#vdem$v2xca_academ <- vdem$v2xca_academ*100
#vdem$v2x_libdem <- vdem$v2x_libdem*100
#selecting and renaming spi vars
spi <- spi %>%
select(country, iso3c, date, SPI.INDEX, SPI.INDEX.PIL1, SPI.INDEX.PIL2, SPI.INDEX.PIL3, SPI.INDEX.PIL4, SPI.INDEX.PIL5) %>%
rename(country_name = country) %>%
rename(country_code = iso3c) %>%
rename(year = date) %>%
rename(spi_comp = SPI.INDEX) %>% #SPI composite score, average of p1-5
rename(p1_use = SPI.INDEX.PIL1) %>% #SPI pillar 1, Data use
rename(p2_services = SPI.INDEX.PIL2) %>% #SPI pillar, 2 Data services
rename(p3_products = SPI.INDEX.PIL3) %>% #SPI pillar, 3 Data products
rename(p4_sources = SPI.INDEX.PIL4) %>% #SPI pillar, 4 Data sources
rename(p5_infra = SPI.INDEX.PIL5) #SPI pillar 5, Data infrastructure
#full dataset
sci <- sci_df %>%
dplyr::select(country_name, country_code, Year, IQ.SCI.OVRL, IQ.SCI.MTHD, IQ.SCI.PRDC, IQ.SCI.SRCE, everything()) %>%
rename(year = Year,
sci_overall = IQ.SCI.OVRL,
sci_method = IQ.SCI.MTHD,
sci_periodicity = IQ.SCI.PRDC,
sci_source = IQ.SCI.SRCE)
sci$year <- as.numeric(sci$year)
#for merging (only sci score variables selected)
sci_scores <- sci %>%
select(country_name, country_code, year, sci_overall, sci_method, sci_periodicity, sci_source)
#select sdg goals & composite
sdg <- sdg %>%
dplyr::select("country_name", "country_code", "year", "sdg_overall", "goal1", "goal2", "goal3", "goal4", "goal5", "goal6", "goal7", "goal8", "goal9", "goal10", "goal11", "goal12", "goal3", "goal14", "goal15", "goal16", "goal17")
#merge spi, sci, sdg and vdem data
merged <- left_join(sdg, spi, by = c("year", "country_code"))
merged <- left_join(merged, sci_scores, by = c("country_code", "year"))
merged <- left_join(merged, vdem, by = c("country_code", "year"))
#rm duplicate col names
colnames(merged) <- make.unique(colnames(merged)) # Make column names unique
#data type changes
merged$year <- as.integer(merged$year)
merged <- merged %>%
mutate_at(c("spi_comp", "p1_use", "p2_services", "p3_products", "p4_sources", "p5_infra", "sci_overall", "sci_method", "sci_periodicity", "sci_source"), as.numeric)
#exporting time series data AS: merged_ts.csv ; will save to current working directory
write.table(merged, file = "merged_ts.csv", row.names=F, sep = ",")
#subset for only 2019
merged_cs_2019 <- merged[merged$year==2019,]
#exporting cross-sectional 2019 data AS: merged_cs2019; will save to current working directory
write.table(merged_cs_2019, file = "merged_cs2019.csv", row.names=F, sep = ",")
# subset for Spain
merged_esp_ts <- merged[merged$country_code=="ESP",]
#exporting Spain time series AS: merged_esp_ts; will save to current working directory
write.table(merged_esp_ts, file = "merged_esp_ts.csv", row.names=F, sep = ",")
# x & y variables
y_var <- merged$sdg_overall
x_var <- merged$spi_comp
df <- data.frame(x_var, y_var)
#correlation coefficient (x, y)
df.omit <- na.omit(df) # removing NA's -needed for cor() function
correlation <- cor(df.omit$x_var, df.omit$y_var)^2
string_corcoef <- "Correlation coefficient:"
paste(string_corcoef, correlation) # pasting result
#OLS lm & full summary table
lm1 <- lm(y_var ~ x_var, data=df)
summary(lm1)
#plotting scatterplot
plot(df$y_var, df$x_var)
abline(lm1)
# x & y variables
y_var <- merged$sdg_overall
x_var <- merged$spi_comp
df <- data.frame(x_var, y_var)
#correlation coefficient (x, y)
df.omit <- na.omit(df) # removing NA's -needed for cor() function
correlation <- cor(df.omit$x_var, df.omit$y_var)^2
string_corcoef <- "Correlation coefficient:"
paste(string_corcoef, correlation) # pasting result
#OLS lm & full summary table
lm1 <- lm(y_var ~ x_var, data=df)
summary(lm1)
#plotting scatterplot
plot(df$y_var, df$x_var)
abline(lm1)
y_var <- merged$sdg_overall
x_var_spi <- merged$spi_comp
x_var_sci <- merged$sci_overall
df <- data.frame(y_var, x_var_spi, x_var_sci)
df <- na.omit(df)
# comparing correlation btw x-vars
sdg_spi_corr <- cor(df$sdg_overall, df$x_var_spi)^2 #x-var 1 = spi
test_lm <- lm(sdg_overall ~ spi_comp:aut_ep, data = event_data)
View(merged_cs_2019)
setwd("~/Documents/GitHub/QMSS_Thesis_Sanchez")
#load libraries
source("packages.R")
#load data
event_data_all <- read_csv("data/Main CSV Outputs/merged_final_df.csv")
#selecting vars
event_data <- event_data_all %>%
dplyr::select(country_code, year, sdg_overall, spi_comp, di_score, aut_ep, dem_ep, regch_event, regime_type_2, regime_type_4, elect_dem, lib_dem, part_dem, delib_dem, egal_dem, academ_free, income_level, income_level_lab, log_gdppc, population) %>%
arrange(country_code, year) %>%  # Critical for correct lagging
filter(year >= 2016)
test_lm <- lm(sdg_overall ~ spi_comp:aut_ep, data = event_data)
summary(test_lm)
test_lm1 <- lm(sdg_overall ~ spi_comp:aut_ep, data = event_data)
summary(test_lm1)
test_lm1 <- lm(sdg_overall ~ spi_comp + aut_ep, data = event_data)
summary(test_lm1)
test_lm1 <- lm(sdg_overall ~ spi_comp + aut_ep, data = event_data)
summary(test_lm1)
test_lm2 <- lm(sdg_overall ~ spi_comp*aut_ep, data = event_data)
summary(test_lm2)
test_lm3 <- lm(sdg_overall ~ spi_comp + spi_comp*aut_ep, data = event_data)
summary(test_lm3)
test_lm4 <- lm(sdg_overall ~ spi_comp:aut_ep, data = event_data)
summary(test_lm4)
test_lm5 <- lm(sdg_overall ~ spi_comp + spi_comp:aut_ep, data = event_data)
summary(test_lm5)
test_lm1 <- lm(sdg_overall ~ spi_comp + aut_ep, data = event_data)
summary(test_lm1)
test_lm2 <- lm(sdg_overall ~ spi_comp*aut_ep, data = event_data)
summary(test_lm2)
test_lm3 <- lm(sdg_overall ~ spi_comp + spi_comp*aut_ep, data = event_data)
summary(test_lm3)
test_lm4 <- lm(sdg_overall ~ spi_comp:aut_ep, data = event_data)
summary(test_lm4)
test_lm5 <- lm(sdg_overall ~ spi_comp + spi_comp:aut_ep, data = event_data)
summary(test_lm5)
test_lm2 <- lm(sdg_overall ~ spi_comp*aut_ep, data = event_data)
summary(test_lm2)
test_lm3 <- lm(sdg_overall ~ spi_comp + aut_ep + spi_comp*aut_ep, data = event_data)
summary(test_lm3)
test_lm3 <- lm(sdg_overall ~ spi_comp + aut_ep + spi_comp*aut_ep, data = event_data)
summary(test_lm3)
test_lm3 <- lm(sdg_overall ~ spi_comp + aut_ep + spi_comp*aut_ep, data = event_data)
summary(test_lm3)
test_lm3 <- lm(sdg_overall ~ spi_comp + aut_ep + spi_comp*aut_ep, data = event_data)
summary(test_lm3)
test_lm3 <- lm(sdg_overall ~ spi_comp + spi_comp*aut_ep, data = event_data)
summary(test_lm3)
test_lm2 <- lm(sdg_overall ~ spi_comp*aut_ep, data = event_data)
summary(test_lm2)
summary(test_lm2)
summary(test_lm3)
summary(test_lm3)
test_lm5 <- lm(sdg_overall ~ spi_comp + spi_comp:aut_ep, data = event_data)
summary(test_lm5)
test_lm5 <- lm(sdg_overall ~ spi_comp + aut_ep + spi_comp:aut_ep, data = event_data)
summary(test_lm5)
test_lm3 <- lm(sdg_overall ~ spi_comp + aut_ep + spi_comp*aut_ep, data = event_data)
summary(test_lm3)
#Load final cleaned 'merged' Dataset & selecting variables
merged_final <- read_csv("data/Main CSV Outputs/merged_cleaned.csv") %>%
dplyr::select(country_name, country_code, year, sdg_overall, spi_comp, sci_overall, di_score, regime_type_2, regime_type_4, regch_event, aut_ep, dem_ep, elect_dem, lib_dem, part_dem, delib_dem, egal_dem, academ_free, income_level, income_level_lab, gdp_pc, log_gdppc, gini, population, p1_use, p2_services, p3_products, p4_sources, p5_infra, goal1, goal2, goal3, goal4, goal5, goal6, goal7, goal8, goal9, goal10, goal11, goal12, goal13, goal14, goal15, goal16, goal17)
#writing final merged csv
write.table(merged_final, file = 'data/Main CSV Outputs/merged_final_df.csv', row.names=F, sep = ",")
#load final merged df
merged <- read_csv("data/Main CSV Outputs/merged_final_df.csv")
merged_2015 <- merged %>%
filter(year > 2015) %>%
mutate(regime_type_2 = as.factor(regime_type_2),
regime_type_4 = as.factor(regime_type_4))
#interaction 1: does GNI Classification (income_level) affect the relationship between x (spi) & y (sdg)?
inc_lev_interaction <- lm(sdg_overall ~ spi_comp + income_level + log_gdppc + population + factor(year), data = merged_2015)
summary(inc_lev_interaction)
coeftest(inc_lev_interaction, vcov = vcovHC(inc_lev_interaction, type = "HC1")) #Robust SE
inc_lev_interaction <- lm(sdg_overall ~ spi_comp*income_level + log_gdppc + population + factor(year), data = merged_2015)
summary(inc_lev_interaction)
coeftest(inc_lev_interaction, vcov = vcovHC(inc_lev_interaction, type = "HC1")) #Robust SE
test_lm6 <- lm(sdg_overall ~ spi_comp*income_level, data = merged_2015)
summary(test_lm6)
test_lm6 <- lm(sdg_overall ~ spi_comp + income_level, data = merged_2015)
summary(test_lm6)
# multiple categories - interaction
test_lm7 <- lm(sdg_overall ~ spi_comp*income_level, data = merged_2015)
summary(test_lm7)
test_ctrl <- lm(sdg_overall ~ spi_comp + income_level, data = merged_2015)
summary(test_ctrl)
# multiple categories - interaction
test_intr <- lm(sdg_overall ~ spi_comp*income_level, data = merged_2015)
summary(test_intr)
# multiple categories - controls
test_ctrl <- lm(sdg_overall ~ spi_comp + income_level, data = merged_2015)
summary(test_ctrl)
# multiple categories - interaction
test_intr <- lm(sdg_overall ~ spi_comp*income_level, data = merged_2015)
summary(test_intr)
