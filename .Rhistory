cen_spi_comp = spi_comp - mean(spi_comp, na.rm = TRUE),
cen_di_score = di_score - mean(di_score, na.rm = TRUE),
cen_log_gdppc = log_gdppc - mean(log_gdppc, na.rm = TRUE),
# Lagged centered variables
cen_spi_comp_lag1 = dplyr::lag(cen_spi_comp, n = 1),
cen_spi_comp_lag2 = dplyr::lag(cen_spi_comp, n = 2),
cen_di_score_lag1 = dplyr::lag(cen_di_score, n = 1),
cen_di_score_lag2 = dplyr::lag(cen_di_score, n = 2),
# Polynomial terms for lagged centered variables
cen_spi_comp_lag1_sq = cen_spi_comp_lag1^2,
cen_spi_comp_lag1_cub = cen_spi_comp_lag1^3,
cen_spi_comp_lag2_sq = cen_spi_comp_lag2^2,
cen_spi_comp_lag2_cub = cen_spi_comp_lag2^3,
cen_di_score_lag1_sq = cen_di_score_lag1^2,
cen_di_score_lag1_cub = cen_di_score_lag1^3,
cen_di_score_lag2_sq = cen_di_score_lag2^2,
cen_di_score_lag2_cub = cen_di_score_lag2^3,
# Polynomial terms for current centered log GDP
cen_log_gdppc_sq = cen_log_gdppc^2,
cen_log_gdppc_cub = cen_log_gdppc^3
) %>%
ungroup()
# Income level & regime type variables
panel_data <- panel_data %>%
mutate(
# Income level recoding
income_level_recoded = case_when(
income_level == "L" ~ 0,   # Low-Income
income_level == "LM" ~ 1,  # Lower-Middle-Income
income_level == "UM" ~ 2,  # Upper-Middle-Income
income_level == "H" ~ 3,   # High-Income
TRUE ~ NA_integer_
),
income_level_recoded = as.factor(income_level_recoded),
# Regime type variables (ERT)
regime_type_4 = as.factor(regime_type_4),
ert_autocracy = as.factor(ifelse(regime_type_4 %in% c(0, 1), 1, 0)),
ert_democracy = as.factor(ifelse(regime_type_4 %in% c(2, 3), 1, 0)),
ert_aut_ep = as.factor(aut_ep),
ert_dem_ep = as.factor(dem_ep),
ert_regch_event = as.factor(regch_event)
) %>%
# Country-level episode indicators
group_by(country_code) %>%
mutate(
ert_has_aut_ep = as.factor(ifelse(any(ert_aut_ep == 1, na.rm = TRUE), 1, 0)),
ert_has_dem_ep = as.factor(ifelse(any(ert_dem_ep == 1, na.rm = TRUE), 1, 0)),
ert_has_both = ifelse(any(ert_aut_ep == 1 & ert_dem_ep == 1, na.rm = TRUE), 1, 0),
ert_has_neither = as.factor(ifelse(!any(ert_aut_ep == 1 | dem_ep == 1, na.rm = TRUE), 1, 0)),
ert_total_aut_ep = sum(as.numeric(as.character(ert_aut_ep)), na.rm = TRUE),
ert_total_dem_ep = sum(as.numeric(as.character(ert_dem_ep)), na.rm = TRUE),
ert_democratized = as.factor(ifelse(any(regch_event == 1, na.rm = TRUE), 1, 0)),
ert_autocratized = as.factor(ifelse(any(regch_event == -1, na.rm = TRUE), 1, 0)),
ert_stable = as.factor(ifelse(!any(regch_event == 1 | regch_event == -1, na.rm = TRUE), 1, 0))
) %>%
ungroup()
View(panel_data)
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_3yr = lead(di_score, 3) - di_score,
di_score_change_4yr = lead(di_score, 4) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.5,    # Single year drop threshold
cumulative_drop_threshold = -1.0, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold,
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold,
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold,
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_3yr = lead(di_score, 3) - di_score,
di_score_change_4yr = lead(di_score, 4) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.5,    # Single year drop threshold
cumulative_drop_threshold = -1.0, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold,
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold,
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold,
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
View(panel_data)
# R Code for identifying years before significant backsliding
library(dplyr)
# Load your panel data
#panel_data <- read.csv("panel_data_perp_again.csv")
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_3yr = lead(di_score, 3) - di_score,
di_score_change_4yr = lead(di_score, 4) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.5,    # Single year drop threshold
cumulative_drop_threshold = -1.0, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold,
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold,
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold,
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# R Code for identifying years before significant backsliding
library(dplyr)
# Load your panel data
#panel_data <- read.csv("panel_data_perp_again.csv")
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_3yr = lead(di_score, 3) - di_score,
di_score_change_4yr = lead(di_score, 4) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.5,    # Single year drop threshold
cumulative_drop_threshold = -1.0, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold,
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold,
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold,
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# R Code for identifying years before significant backsliding
library(dplyr)
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = dplyr::lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_3yr = dplyr::lead(di_score, 3) - di_score,
di_score_change_4yr = dplyr::lead(di_score, 4) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.5,    # Single year drop threshold
cumulative_drop_threshold = -1.0, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold,
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold,
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold,
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# View results for a specific country
panel_data1 %>%
filter(country_code == "VEN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next,
di_score_change_3yr, pre_backsliding_year) %>%
print()
View(panel_data1)
# R Code for identifying years before significant backsliding
library(dplyr)
# Load your panel data
#panel_data <- read.csv("panel_data_perp_again.csv")
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = dplyr::lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_3yr = dplyr::lead(di_score, 3) - di_score,
di_score_change_4yr = dplyr::lead(di_score, 4) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.7,    # Single year drop threshold
cumulative_drop_threshold = -1.0, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold,
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold,
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold,
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# View results for a specific country
panel_data1 %>%
filter(country_code == "VEN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next,
di_score_change_3yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(country_code == "VEN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next,
di_score_change_3yr, di_score_change_4yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(country_code == "VEN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next,
di_score_change_3yr, di_score_change_4yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(country_code == "TUR") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next,
di_score_change_3yr, di_score_change_4yr, pre_backsliding_year) %>%
print()
# R Code for identifying years before significant backsliding
library(dplyr)
# Load your panel data
#panel_data <- read.csv("panel_data_perp_again.csv")
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = dplyr::lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_2yr = dplyr::lead(di_score, 2) - di_score,
di_score_change_3yr = dplyr::lead(di_score, 3) - di_score,
di_score_change_4yr = dplyr::lead(di_score, 4) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.7,    # Single year drop threshold
cumulative_drop_threshold = -1.0, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold, # Abrupt drop next year
cumulative_drop_2yr = di_score_change_2yr <= cumulative_drop_threshold, # Cumulative drop over 2 years
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold, # Cumulative drop over 3 years
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold, # Cumulative drop over 4 years
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_2yr ~ 1,        # Year before 2-year cumulative drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# View results for a specific country
panel_data1 %>%
filter(country_code == "TUR") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(country_code == "TUR") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(country_code == "VEN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(country_code == "HUN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, pre_backsliding_year) %>%
print()
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = dplyr::lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_2yr = dplyr::lead(di_score, 2) - di_score,
di_score_change_3yr = dplyr::lead(di_score, 3) - di_score,
di_score_change_4yr = dplyr::lead(di_score, 4) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.5,    # Single year drop threshold
cumulative_drop_threshold = -1.0, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold, # Abrupt drop next year
cumulative_drop_2yr = di_score_change_2yr <= cumulative_drop_threshold, # Cumulative drop over 2 years
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold, # Cumulative drop over 3 years
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold, # Cumulative drop over 4 years
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_2yr ~ 1,        # Year before 2-year cumulative drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# View results for a specific country
panel_data1 %>%
filter(country_code == "HUN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, pre_backsliding_year) %>%
print()
# R Code for identifying years before significant backsliding
library(dplyr)
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = dplyr::lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_2yr = dplyr::lead(di_score, 2) - di_score,
di_score_change_3yr = dplyr::lead(di_score, 3) - di_score,
di_score_change_4yr = dplyr::lead(di_score, 4) - di_score,
di_score_change_5yr = dplyr::lead(di_score, 5) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.5,    # Single year drop threshold
cumulative_drop_threshold = -1., # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold, # Abrupt drop next year
cumulative_drop_2yr = di_score_change_2yr <= cumulative_drop_threshold, # Cumulative drop over 2 years
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold, # Cumulative drop over 3 years
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold, # Cumulative drop over 4 years
cumulative_drop_5yr = di_score_change_5yr <= cumulative_drop_threshold, # Cumulative drop over 5 years
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_2yr ~ 1,        # Year before 2-year cumulative drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
cumulative_drop_5yr ~ 1,        # Year before 5-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# View results for a specific country
panel_data1 %>%
filter(pre_backsliding_year == "1") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, di_score_change_5yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(pre_backsliding_year == "1") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, di_score_change_5yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(pre_backsliding_year == "VEN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, di_score_change_5yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(pre_backsliding_year == "VEN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, di_score_change_5yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(pre_backsliding_year == "VEZ") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, di_score_change_5yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(pre_backsliding_year == "HUN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, di_score_change_5yr, pre_backsliding_year) %>%
print()
# View results for a specific country
panel_data1 %>%
filter(country_code == "HUN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, di_score_change_5yr, pre_backsliding_year) %>%
print()
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = dplyr::lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_2yr = dplyr::lead(di_score, 2) - di_score,
di_score_change_3yr = dplyr::lead(di_score, 3) - di_score,
di_score_change_4yr = dplyr::lead(di_score, 4) - di_score,
di_score_change_5yr = dplyr::lead(di_score, 5) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.5,    # Single year drop threshold
cumulative_drop_threshold = -0.75, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold, # Abrupt drop next year
cumulative_drop_2yr = di_score_change_2yr <= cumulative_drop_threshold, # Cumulative drop over 2 years
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold, # Cumulative drop over 3 years
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold, # Cumulative drop over 4 years
cumulative_drop_5yr = di_score_change_5yr <= cumulative_drop_threshold, # Cumulative drop over 5 years
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_2yr ~ 1,        # Year before 2-year cumulative drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
cumulative_drop_5yr ~ 1,        # Year before 5-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# View results for a specific country
panel_data1 %>%
filter(country_code == "HUN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, di_score_change_5yr, pre_backsliding_year) %>%
print()
# R Code for identifying years before significant backsliding
library(dplyr)
# Load your panel data
#panel_data <- read.csv("panel_data_perp_again.csv")
# Sort data by country and year
panel_data1 <- panel_data %>%
arrange(country_code, year) %>%
group_by(country_code) %>%
mutate(
# Calculate change from current year to next year (negative = drop)
di_score_diff_next = dplyr::lead(di_score) - di_score,
# Calculate cumulative changes over next 3 and 4 years
di_score_change_2yr = dplyr::lead(di_score, 2) - di_score,
di_score_change_3yr = dplyr::lead(di_score, 3) - di_score,
di_score_change_4yr = dplyr::lead(di_score, 4) - di_score,
di_score_change_5yr = dplyr::lead(di_score, 5) - di_score,
# Set thresholds for significant drops (adjust these as needed)
abrupt_drop_threshold = -0.5,    # Single year drop threshold
cumulative_drop_threshold = -0.5, # Multi-year drop threshold
# Identify different types of drops
abrupt_drop_next = di_score_diff_next <= abrupt_drop_threshold, # Abrupt drop next year
cumulative_drop_2yr = di_score_change_2yr <= cumulative_drop_threshold, # Cumulative drop over 2 years
cumulative_drop_3yr = di_score_change_3yr <= cumulative_drop_threshold, # Cumulative drop over 3 years
cumulative_drop_4yr = di_score_change_4yr <= cumulative_drop_threshold, # Cumulative drop over 4 years
cumulative_drop_5yr = di_score_change_5yr <= cumulative_drop_threshold, # Cumulative drop over 5 years
# Create main indicator: year before significant backsliding
pre_backsliding_year = case_when(
abrupt_drop_next ~ 1,           # Year before abrupt drop
cumulative_drop_2yr ~ 1,        # Year before 2-year cumulative drop
cumulative_drop_3yr ~ 1,        # Year before 3-year cumulative drop
cumulative_drop_4yr ~ 1,        # Year before 4-year cumulative drop
cumulative_drop_5yr ~ 1,        # Year before 5-year cumulative drop
TRUE ~ 0
)
) %>%
ungroup()
# View results for a specific country
panel_data1 %>%
filter(country_code == "HUN") %>%  # Venezuela as example
select(country_name, year, di_score, di_score_diff_next, di_score_change_2yr,
di_score_change_3yr, di_score_change_4yr, di_score_change_5yr, pre_backsliding_year) %>%
print()
gini <- WDI(country = "all", indicator = "SI.POV.GINI", start = 2000, end = NULL)
library(WDI) # call WDI package for GINI coefficient
#GINI Coefficient - Income [API]
gini <- WDI(country = "all", indicator = "SI.POV.GINI", start = 2000, end = NULL)
View(gini)
